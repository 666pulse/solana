"use strict";(self.webpackChunkall_in_one_solana=self.webpackChunkall_in_one_solana||[]).push([[5464],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>k});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(t),d=o,k=u["".concat(i,".").concat(d)]||u[d]||m[d]||l;return t?a.createElement(k,r(r({ref:n},s),{},{components:t})):a.createElement(k,r({ref:n},s))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=d;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[u]="string"==typeof e?e:o,r[1]=c;for(var p=2;p<l;p++)r[p]=t[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9601:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=t(7462),o=(t(7294),t(3905));const l={},r="\u672c\u5730\u5f00\u53d1",c={unversionedId:"references/local-development",id:"references/local-development",title:"\u672c\u5730\u5f00\u53d1",description:"\u5f00\u542f\u672c\u5730\u9a8c\u8bc1\u5668",source:"@site/docs/cookbook-zh/references/local-development.md",sourceDirName:"references",slug:"/references/local-development",permalink:"/all-in-one-solana/cookbook-zh/references/local-development",draft:!1,editUrl:"https://github.com/CreatorsDAO/all-in-one-solana/edit/main/docs/cookbook-zh/references/local-development.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5bc6\u94a5\u5bf9\u548c\u94b1\u5305",permalink:"/all-in-one-solana/cookbook-zh/references/keypairs-and-wallets"},next:{title:"\u547d\u540d\u670d\u52a1",permalink:"/all-in-one-solana/cookbook-zh/references/name-service"}},i={},p=[{value:"\u5f00\u542f\u672c\u5730\u9a8c\u8bc1\u5668",id:"\u5f00\u542f\u672c\u5730\u9a8c\u8bc1\u5668",level:2},{value:"\u8fde\u63a5\u5230\u4e0d\u540c\u73af\u5883",id:"\u8fde\u63a5\u5230\u4e0d\u540c\u73af\u5883",level:2},{value:"\u8ba2\u9605\u4e8b\u4ef6",id:"\u8ba2\u9605\u4e8b\u4ef6",level:2},{value:"\u83b7\u53d6\u6d4b\u8bd5\u7528\u7684SOL",id:"\u83b7\u53d6\u6d4b\u8bd5\u7528\u7684sol",level:2},{value:"\u4f7f\u7528\u4e3b\u7f51 \uff08Mainnet) \u8d26\u6237\u548c\u7a0b\u5e8f",id:"\u4f7f\u7528\u4e3b\u7f51-mainnet-\u8d26\u6237\u548c\u7a0b\u5e8f",level:2},{value:"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u8d26\u6237",id:"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u8d26\u6237",level:3},{value:"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u7a0b\u5e8f",id:"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u7a0b\u5e8f",level:3}],s={toc:p},u="wrapper";function m(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,a.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u672c\u5730\u5f00\u53d1"},"\u672c\u5730\u5f00\u53d1"),(0,o.kt)("h2",{id:"\u5f00\u542f\u672c\u5730\u9a8c\u8bc1\u5668"},"\u5f00\u542f\u672c\u5730\u9a8c\u8bc1\u5668"),(0,o.kt)("p",null,"\u5728\u672c\u5730\u6d4b\u8bd5\u9a8c\u8bc1\u5668\u6bd4\u5728\u5f00\u53d1\u7f51\u7edc(devnet)\u4e0a\u8fdb\u884c\u6d4b\u8bd5\u66f4\u53ef\u9760\uff0c\u5e76\u4e14\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5728\u5f00\u53d1\u7f51\u7edc\u4e0a\u8fd0\u884c\u4e4b\u524d\u8fdb\u884c\u6d4b\u8bd5\u3002"),(0,o.kt)("p",null,"\u4f60\u53ef\u4ee5\u901a\u8fc7\u5b89\u88c5 ",(0,o.kt)("a",{parentName:"p",href:"/all-in-one-solana/cookbook-zh/getting-started/installation#install-cli"},"solana\u5de5\u5177\u5957\u4ef6"),"\n\u5e76\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u6765\u8bbe\u7f6e\u672c\u5730\u6d4b\u8bd5\u9a8c\u8bc1\u5668\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-console"},"solana-test-validator\n")),(0,o.kt)("p",null,"\u4f7f\u7528\u672c\u5730\u6d4b\u8bd5\u9a8c\u8bc1\u5668\u7684\u597d\u5904\u5305\u62ec\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u65e0RPC\u901f\u7387\u9650\u5236"),(0,o.kt)("li",{parentName:"ul"},"\u65e0\u7a7a\u6295\u9650\u5236"),(0,o.kt)("li",{parentName:"ul"},"\u76f4\u63a5\u5728\u94fe\u4e0a\u90e8\u7f72\u7a0b\u5e8f\uff08",(0,o.kt)("inlineCode",{parentName:"li"},"--bpf-program ..."),"\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u4ece\u516c\u5171\u96c6\u7fa4\u514b\u9686\u8d26\u6237\uff0c\u5305\u62ec\u7a0b\u5e8f\uff08",(0,o.kt)("inlineCode",{parentName:"li"},"--clone ..."),"\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u53ef\u914d\u7f6e\u7684\u4e8b\u52a1\u5386\u53f2\u4fdd\u7559\uff08",(0,o.kt)("inlineCode",{parentName:"li"},"--limit-ledger-size ..."),"\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u53ef\u914d\u7f6e\u7684\u7eaa\u5143\u957f\u5ea6\uff08",(0,o.kt)("inlineCode",{parentName:"li"},"--slots-per-epoch ..."),"\uff09"),(0,o.kt)("li",{parentName:"ul"},"\u8df3\u8f6c\u5230\u4efb\u610f\u69fd\u4f4d\uff08",(0,o.kt)("inlineCode",{parentName:"li"},"--warp-slot ..."),"\uff09")),(0,o.kt)("h2",{id:"\u8fde\u63a5\u5230\u4e0d\u540c\u73af\u5883"},"\u8fde\u63a5\u5230\u4e0d\u540c\u73af\u5883"),(0,o.kt)("p",null,"\u5f53\u4f60\u8fdb\u884cSolana\u5f00\u53d1\u65f6\uff0c\u4f60\u9700\u8981\u8fde\u63a5\u5230\u7279\u5b9a\u7684RPC API\u7aef\u70b9\u3002Solana\u6709\u4e09\u4e2a\u516c\u5171\u7684\u5f00\u53d1\u73af\u5883\uff1a"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"mainnet-beta ",(0,o.kt)("a",{parentName:"li",href:"https://api.mainnet-beta.solana.com"},"https://api.mainnet-beta.solana.com")),(0,o.kt)("li",{parentName:"ul"},"devnet ",(0,o.kt)("a",{parentName:"li",href:"https://api.devnet.solana.com"},"https://api.devnet.solana.com")),(0,o.kt)("li",{parentName:"ul"},"testnet ",(0,o.kt)("a",{parentName:"li",href:"https://api.testnet.solana.com"},"https://api.testnet.solana.com"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// typescript\nconst connection = new Connection(clusterApiUrl("mainnet-beta"), "confirmed");\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'// python\nclient = Client("https://api.mainnet-beta.solana.com")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'// cpp\nConnection connection("https://api.mainnet-beta.solana.com");\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// rust\nlet rpc_url = String::from("https://api.mainnet-beta.solana.com");\nlet client = RpcClient::new_with_commitment(rpc_url, CommitmentConfig::confirmed());\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# bash\nsolana config set --url https://api.mainnet-beta.solana.com\n")),(0,o.kt)("p",null,"\u6700\u540e\uff0c\u4f60\u8fd8\u53ef\u4ee5\u8fde\u63a5\u5230\u79c1\u6709\u96c6\u7fa4\uff0c\u65e0\u8bba\u662f\u672c\u5730\u7684\u8fd8\u662f\u8fdc\u7a0b\u8fd0\u884c\u7684\uff0c\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// typescript\nconst connection = new Connection("http://127.0.0.1:8899", "confirmed");\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'// python\nclient = Client("http://127.0.0.1:8899")\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'// cpp\nConnection connection("http://127.0.0.1:8899");\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// rust\nlet rpc_url = String::from("http://127.0.0.1:8899");\nlet client = RpcClient::new_with_commitment(rpc_url, CommitmentConfig::confirmed());\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# bash\nsolana config set --url http://privaterpc.com\n")),(0,o.kt)("h2",{id:"\u8ba2\u9605\u4e8b\u4ef6"},"\u8ba2\u9605\u4e8b\u4ef6"),(0,o.kt)("p",null,"Websockets\u63d0\u4f9b\u4e86\u4e00\u79cd\u53d1\u5e03/\u8ba2\u9605\u63a5\u53e3\uff0c\u4f60\u53ef\u4ee5\u5728\u5176\u4e2d\u76d1\u542c\u7279\u5b9a\u7684\u4e8b\u4ef6\u3002\u4e0e\u5728\u56fa\u5b9a\u65f6\u95f4\u95f4\u9694\u5185\u5bf9\u5178\u578b\u7684HTTP\u7aef\u70b9\u8fdb\u884c\u8f6e\u8be2\u4ee5\u83b7\u53d6\u9891\u7e41\u7684\u66f4\u65b0\u4e0d\u540c\uff0c\u4f60\u53ef\u4ee5\u4ec5\u5728\u4e8b\u4ef6\u53d1\u751f\u65f6\u624d\u63a5\u6536\u8fd9\u4e9b\u66f4\u65b0\u3002"),(0,o.kt)("p",null,"Solana\u7684web3",(0,o.kt)("a",{parentName:"p",href:"https://solana-labs.github.io/solana-web3.js/classes/Connection.html"},(0,o.kt)("inlineCode",{parentName:"a"},"\u8fde\u63a5"))," \u5728\u5e95\u5c42\u751f\u6210\u4e00\u4e2awebsocket\u7aef\u70b9\uff0c\u5e76\u5728\u521b\u5efa\u65b0\u7684",(0,o.kt)("inlineCode",{parentName:"p"},"Connection"),"\u5b9e\u4f8b\u65f6\u6ce8\u518c\u4e00\u4e2awebsocket\u5ba2\u6237\u7aef\uff08\u8bf7\u53c2\u9605 ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/solana-labs/solana-web3.js/blob/45923ca00e4cc1ed079d8e55ecbee83e5b4dc174/src/connection.ts#L2100"},"\u6b64\u5904"),") \u7684\u6e90\u4ee3\u7801\uff09\u3002"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Connection"),"\u7c7b\u63d0\u4f9b\u4e86\u53d1\u5e03/\u8ba2\u9605\u65b9\u6cd5\uff0c\u5b83\u4eec\u90fd\u4ee5",(0,o.kt)("inlineCode",{parentName:"p"},"on"),"\u5f00\u5934\uff0c\u7c7b\u4f3c\u4e8e\u4e8b\u4ef6\u53d1\u5c04\u5668\u3002\u5f53\u60a8\u8c03\u7528\u8fd9\u4e9b\u76d1\u542c\u5668\u65b9\u6cd5\u65f6\uff0c\u5b83\u4f1a\u5728\u8be5",(0,o.kt)("inlineCode",{parentName:"p"},"Connection"),"\u5b9e\u4f8b\u7684websocket\u5ba2\u6237\u7aef\u4e2d\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684\u8ba2\u9605\u3002\u4e0b\u9762\u6211\u4eec\u4f7f\u7528\u7684\u793a\u4f8b\u53d1\u5e03/\u8ba2\u9605\u65b9\u6cd5\u662f",(0,o.kt)("a",{parentName:"p",href:"https://solana-labs.github.io/solana-web3.js/classes/Connection.html#onAccountChange"},(0,o.kt)("inlineCode",{parentName:"a"},"onAccountChange")),"\u3002 \u56de\u8c03\u51fd\u6570\u5c06\u901a\u8fc7\u53c2\u6570\u63d0\u4f9b\u66f4\u65b0\u7684\u72b6\u6001\u6570\u636e\uff08\u4f8b\u5982\uff0c\u67e5\u770bA",(0,o.kt)("a",{parentName:"p",href:"https://solana-labs.github.io/solana-web3.js/modules.html#AccountChangeCallback"},(0,o.kt)("inlineCode",{parentName:"a"},"AccountChangeCallback"))," \u4f5c\u4e3a\u793a\u4f8b\uff09\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'// typescript\n// Establish new connect to devnet - websocket client connected to devnet will also be registered here\nconst connection = new Connection(clusterApiUrl("devnet"), "confirmed");\n\n// Create a test wallet to listen to\nconst wallet = Keypair.generate();\n\n// Register a callback to listen to the wallet (ws subscription)\nconnection.onAccountChange(\n  wallet.publicKey(),\n  (updatedAccountInfo, context) =>\n    console.log("Updated account info: ", updatedAccountInfo),\n  "confirmed"\n);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'// python\nasync with connect("wss://api.devnet.solana.com") as websocket:\n    # Create a Test Wallet\n    wallet = Keypair()\n    # Subscribe to the Test wallet to listen for events\n    await websocket.account_subscribe(wallet.pubkey())\n    # Capture response from account subscription\n    first_resp = await websocket.recv()\n    print("Subscription successful with id {}, listening for events \\n".format(first_resp.result))\n    updated_account_info = await websocket.recv()\n    print(updated_account_info)\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'// cpp\nauto key_pair = Keypair::generate();\n\nint subscriptionId = connection.on_account_change(key_pair.public_key, [&](Result<Account> result) {\n    Account account = result.unwrap();\n    std::cout << "owner = " << account.owner.to_base58() << std::endl;\n    std::cout << "lamports = " << account.lamports << std::endl;\n    std::cout << "data = " << account.data << std::endl;\n    std::cout << "executable = " << (account.executable ? "true" : "false") << std::endl;\n});\n\nfor (int i = 0; i < 10; i++) {\n    connection.poll();\n    sleep(1);\n}\n\nconnection.remove_account_listener(subscriptionId);\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// rust\nlet ws_url = String::from("wss://api.devnet.solana.com/");\nlet (mut client, receiver) = PubsubClient::account_subscribe(\n    &ws_url,\n    &pubkey,\n    Some(RpcAccountInfoConfig {\n        encoding: None,\n        data_slice: None,\n        commitment: Some(CommitmentConfig::confirmed()),\n    }),\n).unwrap();\nlet message = match receiver.recv().unwrap();\nprintln!("{:?}", message)\n')),(0,o.kt)("h2",{id:"\u83b7\u53d6\u6d4b\u8bd5\u7528\u7684sol"},"\u83b7\u53d6\u6d4b\u8bd5\u7528\u7684SOL"),(0,o.kt)("p",null,"\u4f60\u5728\u672c\u5730\u5de5\u4f5c\u65f6\uff0c\u4e3a\u4e86\u53d1\u9001\u4ea4\u6613\uff0c\u4f60\u9700\u8981\u4e00\u4e9b SOL\u3002\u5728\u975e\u4e3b\u7f51\u73af\u5883\u4e2d\uff0c\u4f60\u53ef\u4ee5\u5411\u4f60\u7684\u5730\u5740\u7a7a\u6295 SOL\uff0c\u83b7\u53d6SOL\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// typescript\nconst airdropSignature = await connection.requestAirdrop(\n  keypair.publicKey,\n  LAMPORTS_PER_SOL\n);\n\nawait connection.confirmTransaction(airdropSignature);\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"// python\n#Input Airdrop amount in LAMPORTS\nclient.request_airdrop(wallet.pubkey(), 1000000000)\n\n#Airdrops 1 SOL\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},"// cpp\nconnection.request_airdrop(key_pair.public_key).unwrap();\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-rust"},'// rust\nmatch client.request_airdrop(&pubkey, LAMPORTS_PER_SOL) {\n    Ok(sig) => loop {\n        if let Ok(confirmed) = client.confirm_transaction(&sig) {\n            if confirmed {\n                println!("Transaction: {} Status: {}", sig, confirmed);\n                break;\n            }\n        }\n    },\n    Err(_) => println!("Error requesting airdrop"),\n};\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# cli\nsolana airdrop 1\n")),(0,o.kt)("h2",{id:"\u4f7f\u7528\u4e3b\u7f51-mainnet-\u8d26\u6237\u548c\u7a0b\u5e8f"},"\u4f7f\u7528\u4e3b\u7f51 \uff08Mainnet) \u8d26\u6237\u548c\u7a0b\u5e8f"),(0,o.kt)("p",null,"\u672c\u5730\u6d4b\u8bd5\u901a\u5e38\u4f9d\u8d56\u4e8e\u4ec5\u5728\u4e3b\u7f51\u4e0a\u53ef\u7528\u7684\u7a0b\u5e8f\u548c\u8d26\u6237\u3002Solana CLI \u63d0\u4f9b\u4e86\u4ee5\u4e0b\u4e24\u4e2a\u529f\u80fd\uff1a"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"\u4e0b\u8f7d\u7a0b\u5e8f\u548c\u8d26\u6237\n"),"\u5c06\u7a0b\u5e8f\u548c\u8d26\u6237\u52a0\u8f7d\u5230\u672c\u5730\u9a8c\u8bc1\u5668\u4e2d"),(0,o.kt)("h3",{id:"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u8d26\u6237"},"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u8d26\u6237"),(0,o.kt)("p",null,"\u53ef\u4ee5\u5c06SRM\u4ee3\u5e01\u7684\u94f8\u9020(mint)\u8d26\u6237\u4e0b\u8f7d\u5230\u6587\u4ef6\u4e2d\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"solana account -u m --output json-compact --output-file SRM_token.json SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt\n")),(0,o.kt)("p",null,"\u7136\u540e\uff0c\u901a\u8fc7\u5728\u542f\u52a8\u9a8c\u8bc1\u5668\u65f6\u4f20\u9012\u8be5\u8d26\u6237\u6587\u4ef6\u548c\u76ee\u6807\u5730\u5740\uff08\u5728\u672c\u5730\u96c6\u7fa4\u4e0a\uff09\u4f60\u53ef\u4ee5\u5c06\u5176\u52a0\u8f7d\u5230\u672c\u5730\u7f51\u7edc\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"solana-test-validator --account SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt SRM_token.json --reset\n")),(0,o.kt)("h3",{id:"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u7a0b\u5e8f"},"\u5982\u4f55\u4ece\u4e3b\u7f51\u52a0\u8f7d\u7a0b\u5e8f"),(0,o.kt)("p",null,"\u540c\u6837\u5730\uff0c\u6211\u4eec\u53ef\u4ee5\u4e0b\u8f7dSerum Dex v3\u7a0b\u5e8f\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"solana program dump -u m 9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin serum_dex_v3.so\n")),(0,o.kt)("p",null,"\u7136\u540e\uff0c\u5728\u542f\u52a8\u9a8c\u8bc1\u5668\u65f6\uff0c\u901a\u8fc7\u4f20\u9012\u7a0b\u5e8f\u7684\u6587\u4ef6\u548c\u76ee\u6807\u5730\u5740\uff08\u5728\u672c\u5730\u96c6\u7fa4\u4e0a\uff09\u6765\u5c06\u5176\u52a0\u8f7d\u5230\u672c\u5730\u7f51\u7edc\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"solana-test-validator --bpf-program 9xQeWvG816bUx9EPjHmaT23yvVM2ZWbrrpZb9PusVFin serum_dex_v3.so --reset\n")))}m.isMDXComponent=!0}}]);