"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5111],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(t),m=r,k=u["".concat(l,".").concat(m)]||u[m]||d[m]||o;return t?a.createElement(k,s(s({ref:n},p),{},{components:t})):a.createElement(k,s({ref:n},p))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i[u]="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1778:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const o={sidebar_position:125,sidebar_label:"Program \u8c03\u7528",sidebar_class_name:"green"},s="Program \u8c03\u7528",i={unversionedId:"Solana-Bootcamp-zh/week3/call-program",id:"Solana-Bootcamp-zh/week3/call-program",title:"Program \u8c03\u7528",description:"\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 web3.js \u63d0\u4f9b\u7684 SystemProgram \u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u4e86\u8f6c\u8d26\u7684\u529f\u80fd\u3002",source:"@site/docs/Solana-Bootcamp-zh/week3/call-program.md",sourceDirName:"Solana-Bootcamp-zh/week3",slug:"/Solana-Bootcamp-zh/week3/call-program",permalink:"/all-in-one-solana/docs/Solana-Bootcamp-zh/week3/call-program",draft:!1,editUrl:"https://github.com/CreatorsDAO/all-in-one-solana/edit/main/docs/Solana-Bootcamp-zh/week3/call-program.md",tags:[],version:"current",sidebarPosition:125,frontMatter:{sidebar_position:125,sidebar_label:"Program \u8c03\u7528",sidebar_class_name:"green"},sidebar:"tutorialSidebar",previous:{title:"\u4e0e\u94b1\u5305\u4ea4\u4e92",permalink:"/all-in-one-solana/docs/Solana-Bootcamp-zh/week3/call-wallet"},next:{title:"\u8bfe\u540e\u7ec3\u4e60",permalink:"/all-in-one-solana/docs/Solana-Bootcamp-zh/week3/homework"}},l={},c=[{value:"Program\u7684\u5165\u53e3",id:"program\u7684\u5165\u53e3",level:2},{value:"\u6784\u9020 <code>Instruction</code>",id:"\u6784\u9020-instruction",level:2},{value:"\u6784\u9020 <code>Transaction</code>",id:"\u6784\u9020-transaction",level:2},{value:"\u6784\u9020 <code>SPL Token</code> \u7684 \u8f6c\u8d26\u4ea4\u6613",id:"\u6784\u9020-spl-token-\u7684-\u8f6c\u8d26\u4ea4\u6613",level:2},{value:"Demo",id:"demo",level:2}],p={toc:c},u="wrapper";function d(e){let{components:n,...o}=e;return(0,r.kt)(u,(0,a.Z)({},p,o,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"program-\u8c03\u7528"},(0,r.kt)("inlineCode",{parentName:"h1"},"Program")," \u8c03\u7528"),(0,r.kt)("p",null,"\u5728\u524d\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"web3.js")," \u63d0\u4f9b\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"SystemProgram")," \u6765\u5e2e\u52a9\u6211\u4eec\u5b9e\u73b0\u4e86\u8f6c\u8d26\u7684\u529f\u80fd\u3002"),(0,r.kt)("p",null,"\u4f46\u662f\u5bf9\u4e8e\u4e00\u4e2a\u964c\u751f\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\uff0c\u6211\u4eec\u8981\u600e\u4e48\u6765\u53d1\u8d77\u8c03\u7528\u8bf7\u6c42\u5462\uff1f"),(0,r.kt)("h2",{id:"program\u7684\u5165\u53e3"},"Program\u7684\u5165\u53e3"),(0,r.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"SPL Token Program"),"\u6765\u4e3e\u4f8b\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"SPL Token Program"),"\u7c7b\u4f3c web3.js \u4e00\u6837\uff0c\u5176\u5b9e\u5df2\u7ecf\u5c01\u88c5\u597d\u4e86\u4e00\u5957 JS \u5e93\u7ed9\u6211\u4eec\u6765\u76f4\u63a5\u4f7f\u7528\u3002\u8fd9\u91cc\u6211\u4eec\u4e0d\u4f7f\u7528\u5e93\uff0c\u800c\u4ee5\u4e00\u4e2a\u524d\u7aef\u7684\u8eab\u4efd\uff0c\u6765\u770b\u8fd9\u6837\u7684\u4e00\u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\uff0c\u6211\u4eec\u8981\u600e\u4e48\u6765\u4ea4\u4e92\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u4ee5 ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," \u51fd\u6570\u4f5c\u4e3a\u4f8b\u5b50\u3002"),(0,r.kt)("p",null,"\u9996\u5148\u8981\u7406\u89e3",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\u7684\u4f5c\u7528\u548c\u53c2\u6570\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u8ddf",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\u5f00\u53d1\u53bb\u6c9f\u901a\u3002\u6bd4\u5982\u6211\u4eec\u4ece\u6ce8\u91ca\u4e86\u89e3\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," \u4e3a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"/// Transfers tokens from one account to another either directly or via a\n/// delegate.  If this account is associated with the native mint then equal\n/// amounts of SOL and Tokens will be transferred to the destination\n/// account.\n///\n/// Accounts expected by this instruction:\n///\n///   * Single owner/delegate\n///   0. `[writable]` The source account.\n///   1. `[writable]` The destination account.\n///   2. `[signer]` The source account's owner/delegate.\n///\n///   * Multisignature owner/delegate\n///   0. `[writable]` The source account.\n///   1. `[writable]` The destination account.\n///   2. `[]` The source account's multisignature owner/delegate.\n///   3. ..3+M `[signer]` M signer accounts.\nTransfer {\n    /// The amount of tokens to transfer.\n    amount: u64,\n},\n")),(0,r.kt)("p",null,"\u603b\u5171\u9700\u8981 3 \u4e2a",(0,r.kt)("inlineCode",{parentName:"p"},"key"),"\uff0c\u5206\u522b\u662f\uff0c\u53d1\u9001\u65b9\uff0c\u63a5\u6536\u65b9\u4ee5\u53ca\u53d1\u9001\u65b9\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"ower/delegate"),"\u3002\u7136\u540e\u6709\u4e00\u4e2a\u7c7b\u578b ",(0,r.kt)("inlineCode",{parentName:"p"},"u64"),"\u7684\u53c2\u6570\u3002"),(0,r.kt)("p",null,"\u77e5\u9053\u4e86\u8fd9\u4e9b\u6211\u4eec\u624d\u53ef\u4ee5\u6784\u9020\u6211\u4eec\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Instruction"),"\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"Instruction")," \u7684\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n* Transaction Instruction class\n*/\nexport class TransactionInstruction {\n    /**\n    * Public keys to include in this transaction\n    * Boolean represents whether this pubkey needs to sign the transaction\n    */\n    keys: Array<AccountMeta>;\n    /**\n    * Program Id to execute\n    */\n    programId: PublicKey;\n    /**\n    * Program input\n    */\n    data: Buffer;\n    constructor(opts: TransactionInstructionCtorFields);\n}\n")),(0,r.kt)("p",null,"\u6240\u4ee5\u6211\u4eec\u4e3b\u8981\u5c31\u662f\u8981\u4ece",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\u7684\u5b9a\u4e49\u4e2d\u77e5\u9053\u8fd9\u91cc\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"keys")," \u662f\u4ec0\u4e48\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," \u662f\u4ec0\u4e48\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"programId")," \u81ea\u7136\u5c31\u662f",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\u7684\u5730\u5740\u3002"),(0,r.kt)("h2",{id:"\u6784\u9020-instruction"},"\u6784\u9020 ",(0,r.kt)("inlineCode",{parentName:"h2"},"Instruction")),(0,r.kt)("p",null,"\u5728\u4e0a\u9762\uff0c\u6211\u4eec\u77e5\u9053\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"Instruction")," \u7684\u5b9a\u4e49\u3002\u90a3\u4e48\u8981\u5982\u4f55\u6765\u6784\u9020\u5462\uff1f"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u662f\u7528 TypeScript,\u90a3\u4e48\u6bd4\u8f83\u9192\u76ee\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"keys")," \u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"AccountMeta")," \u7684\u6570\u7ec4\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"AccountMeta")," \u7684\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"/**\n* Account metadata used to define instructions\n*/\ntype AccountMeta = {\n    /** An account's public key */\n    pubkey: PublicKey;\n    /** True if an instruction requires a transaction signature matching `pubkey` */\n    isSigner: boolean;\n    /** True if the `pubkey` can be loaded as a read-write account. */\n    isWritable: boolean;\n};\n")),(0,r.kt)("p",null,"\u603b\u5171\u5c31\u4e09\u4e2a\u6210\u5458\uff0c\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"PublicKey")," \u8868\u793a ",(0,r.kt)("inlineCode",{parentName:"p"},"Account")," \u7684\u5730\u5740\uff0c \u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"isSigner")," \u8868\u793a\u662f\u5426\u4e3a\u7b7e\u540d\u8005\uff0c\u8bf4\u767d\u4e86\u5c31\u662f\u662f\u4e0d\u662f\u4f60\u81ea\u5df1\u3002\u4ee5\u53ca ",(0,r.kt)("inlineCode",{parentName:"p"},"isWritable"),"\uff0c\u8868\u793a\u8fd9\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"Account")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Data")," \u90e8\u5206\u662f\u5426\u53ef\u4ee5\u4fee\u6539\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc ",(0,r.kt)("inlineCode",{parentName:"p"},"PublicKey")," \u7684\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export class PublicKey extends Struct {\n    /**\n    * Create a new PublicKey object\n    * @param value ed25519 public key as buffer or base-58 encoded string\n    */\n    constructor(value: PublicKeyInitData);\n\n    ...\n}\n\n/**\n* Value to be converted into public key\n*/\ntype PublicKeyInitData = number | string | Uint8Array | Array<number> | PublicKeyData;\n")),(0,r.kt)("p",null,"\u5176\u5b9e\u5c31\u662f\u7528\u516c\u94a5\u7684\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5\u8fdb\u884c\u6784\u9020\u4e86\u3002"),(0,r.kt)("p",null,"\u6240\u4ee5\u5982\u679c\u662f\u7528 TypeScript\u3002\u5c31\u4e25\u683c\u6309\u7167\u7c7b\u578b\u6765\u5b9a\u4e49\u5c31\u597d\u4e86\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u662f Javascript\uff0c\u53ef\u4ee5\u7528\u5b57\u5178\u6765\u8fdb\u884c\u663e\u5f0f\u521d\u59cb\u5316\uff1a"),(0,r.kt)("p",null,"\u800c ",(0,r.kt)("inlineCode",{parentName:"p"},"data")," \u90e8\u5206\u662f\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"Buffer"),"\uff0c\u5176\u5b9e\u672c\u8d28\u662f\u4e00\u6bb5\u4e8c\u8fdb\u5236\uff0c\u5176\u683c\u5f0f\u662f\u6839\u636e",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),'\u6765\u5b9a\u4e49\u7684\uff0c\u4e5f\u53ef\u4ee5\u53c2\u8003\u6807\u51c6\uff0c\u6bd4\u5982"Anchor"\u3002\u800c ',(0,r.kt)("inlineCode",{parentName:"p"},"SPL Token")," \u7684\u4e8c\u8fdb\u5236\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{src:t(5215).Z,width:"974",height:"188"})),(0,r.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u501f\u52a9 ",(0,r.kt)("inlineCode",{parentName:"p"},"web.js"),' \u63d0\u4f9b\u7684"',(0,r.kt)("inlineCode",{parentName:"p"},"encodeData"),'"\u65b9\u6cd5\u6765\u8fdb\u884c\u5e8f\u5217\u5316\u3002\u800c ',(0,r.kt)("inlineCode",{parentName:"p"},"web3.js")," \u7684\u6307\u4ee4\u5b9a\u4e49\u4f9d\u8d56\u4e86 solana \u63d0\u4f9b\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"buffer-layout"),"\uff0c\u56e0\u6b64\u9700\u8981\u8fd9\u6837\u6765\u5b9a\u4e49\uff1a"),(0,r.kt)("p",null,"\u8fd9\u6837\u5b9e\u9645\u4e0a\u5c31\u662f\u5b9a\u4e49\u4e86\u4e0a\u9762\u7684\u8fd9\u4e2a\u5e8f\u5217\u5316\u7684\u56fe\u3002\u5f53\u8c03\u7528",(0,r.kt)("inlineCode",{parentName:"p"},"encodeData"),"\u65b9\u6cd5\u65f6\uff0c\u5c31\u53ef\u4ee5\u6309\u7167\u8fd9\u91cc\u5b9a\u4e49\u7684\u683c\u5f0f\u8fdb\u884c\u5e8f\u5217\u5316\u4e86\u3002"),(0,r.kt)("h2",{id:"\u6784\u9020-transaction"},"\u6784\u9020 ",(0,r.kt)("inlineCode",{parentName:"h2"},"Transaction")),(0,r.kt)("p",null,"\u6709\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionInstruction")," \u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6784\u9020 ",(0,r.kt)("inlineCode",{parentName:"p"},"Transaction")," \u4e86\u3002\u524d\u9762\u5df2\u7ecf\u8bf4\u8fc7\uff0c\u73b0\u5728\u7528\u7684\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"VersionedTransaction"),"\u3002\u4ed6\u7684\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export class VersionedTransaction {\n    signatures: Array<Uint8Array>;\n    message: VersionedMessage;\n    get version(): TransactionVersion;\n    constructor(message: VersionedMessage, signatures?: Array<Uint8Array>);\n    serialize(): Uint8Array;\n    static deserialize(serializedTransaction: Uint8Array): VersionedTransaction;\n    sign(signers: Array<Signer>): void;\n    addSignature(publicKey: PublicKey, signature: Uint8Array): void;\n}\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"VesionedMessage")," \u6765\u6784\u5efa\uff0c\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type VersionedMessage = Message | MessageV0;\nexport const VersionedMessage: {\n    deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number;\n    deserialize: (serializedMessage: Uint8Array) => VersionedMessage;\n};\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Message")," \u662f\u4e3a\u4e86\u517c\u5bb9\u4ee5\u524d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Message"),"\uff0c\u73b0\u5728\u7684\u90fd\u662f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageV0"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export class MessageV0 {\n    header: MessageHeader;\n    staticAccountKeys: Array<PublicKey>;\n    recentBlockhash: Blockhash;\n    compiledInstructions: Array<MessageCompiledInstruction>;\n    addressTableLookups: Array<MessageAddressTableLookup>;\n    constructor(args: MessageV0Args);\n    get version(): 0;\n    get numAccountKeysFromLookups(): number;\n    getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys;\n    isAccountSigner(index: number): boolean;\n    isAccountWritable(index: number): boolean;\n    resolveAddressTableLookups(addressLookupTableAccounts: AddressLookupTableAccount[]): AccountKeysFromLookups;\n    static compile(args: CompileV0Args): MessageV0;\n    serialize(): Uint8Array;\n    private serializeInstructions;\n    private serializeAddressTableLookups;\n    static deserialize(serializedMessage: Uint8Array): MessageV0;\n}\n")),(0,r.kt)("p",null,"\u770b\u4e0a\u53bb\u8d85\u7ea7\u590d\u6742\u3002\u56e0\u6b64 ",(0,r.kt)("inlineCode",{parentName:"p"},"web3.js")," \u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionMessage"),"\u6765\u6784\u9020\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export class TransactionMessage {\n    payerKey: PublicKey;\n    instructions: Array<TransactionInstruction>;\n    recentBlockhash: Blockhash;\n    constructor(args: TransactionMessageArgs);\n    static decompile(message: VersionedMessage, args?: DecompileArgs): TransactionMessage;\n    compileToLegacyMessage(): Message;\n    compileToV0Message(addressLookupTableAccounts?: AddressLookupTableAccount[]): MessageV0;\n}\n")),(0,r.kt)("p",null,"\u5176",(0,r.kt)("inlineCode",{parentName:"p"},"compileToV0Message"),"\u53ef\u4ee5\u8f6c\u6362\u9053\u5f97\u5230\u5bf9\u5e94\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"MessageV0"),"\u3002"),(0,r.kt)("p",null,"\u56e0\u6b64\u53ea\u9700\u8981\u63d0\u4f9b ",(0,r.kt)("inlineCode",{parentName:"p"},"TransactionMessageArgs")," \u5373\u53ef\uff0c\u5176\u5b9a\u4e49\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"type TransactionMessageArgs = {\n    payerKey: PublicKey;\n    instructions: Array<TransactionInstruction>;\n    recentBlockhash: Blockhash;\n};\n\n/**\n* Blockhash as Base58 string.\n*/\ntype Blockhash = string;\n")),(0,r.kt)("p",null,"\u7ec8\u4e8e\u5230\u6b63\u4e3b\u4e86\uff0c\u8fd9\u91cc\u6211\u4eec\u770b\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"payerKey")," \u662f\u4ed8 ",(0,r.kt)("inlineCode",{parentName:"p"},"gas")," \u4eba\u7684\u5730\u5740\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"instructions")," \u662f\u6211\u4eec\u524d\u9762\u4ecb\u7ecd\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Instruction"),"\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"recentBlockhash")," \u662f\u6700\u8fd1\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Blockhash")," \u8fd9\u4e2a\u4e0d\u80fd\u592a\u4e45\u8fdc\u3002\u53ef\u4ee5\u901a\u8fc7 RPC \u8fdb\u884c\u8bf7\u6c42\u3002"),(0,r.kt)("p",null,"\u8fd9\u6837\u6211\u4eec\u8fde\u8d77\u6765\u5c31\u662f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const txInstructions =\n\nconst message = new TransactionMessage({\n  payerKey: this.keypair.publicKey,\n  recentBlockhash: latestBlockhash.blockhash,\n  instructions: txInstructions\n}).compileToV0Message();\n\nconst trx = new VersionedTransaction(messageV0);\n")),(0,r.kt)("h2",{id:"\u6784\u9020-spl-token-\u7684-\u8f6c\u8d26\u4ea4\u6613"},"\u6784\u9020 ",(0,r.kt)("inlineCode",{parentName:"h2"},"SPL Token")," \u7684 \u8f6c\u8d26\u4ea4\u6613"),(0,r.kt)("p",null,"\u524d\u9762\u6211\u4eec\u5df2\u7ecf\u641e\u6e05\u695a\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"SPL Token")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\u8f6c\u8d26\u6307\u4ee4\u7684\u7ed3\u6784\uff0c3 \u4e2a\u8d26\u53f7\u4e00\u4e2a\u6570\u76ee\u3002\u8d26\u53f7\u6bd4\u8f83\u5bb9\u6613\u3002\u6211\u4eec\u81ea\u5df1\u8d26\u53f7\u5bf9\u5e94\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"SPL Token")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"ATA")," \u8d26\u53f7\uff0c\u5bf9\u65b9\u63a5\u6536\u7684\u8d26\u53f7\u3002\u8fd9\u4e24\u4e2a\u90fd\u662f\u4e0d\u9700\u8981\u524d\u9762\u7684\uff0c\u5e76\u4e14\u9700\u8981\u4fee\u6539\u7684\u3002\u8fd8\u6709\u4e2a\u6211\u4eec\u81ea\u5df1\u7684 SOL \u8d26\u53f7\uff0c\u8fd9\u4e2a\u9700\u8981\u7b7e\u540d\u3002"),(0,r.kt)("p",null,"\u5148\u770b\u4e0b ",(0,r.kt)("inlineCode",{parentName:"p"},"Token Program"),"\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Transfer")," \u5b9a\u4e49\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rs"},"/// Transfers tokens from one account to another either directly or via a\n/// delegate.  If this account is associated with the native mint then equal\n/// amounts of SOL and Tokens will be transferred to the destination\n/// account.\n///\n/// Accounts expected by this instruction:\n///\n///   * Single owner/delegate\n///   0. `[writable]` The source account.\n///   1. `[writable]` The destination account.\n///   2. `[signer]` The source account's owner/delegate.\n///\n///   * Multisignature owner/delegate\n///   0. `[writable]` The source account.\n///   1. `[writable]` The destination account.\n///   2. `[]` The source account's multisignature owner/delegate.\n///   3. ..3+M `[signer]` M signer accounts.\nTransfer {\n    /// The amount of tokens to transfer.\n    amount: u64,\n},\n")),(0,r.kt)("p",null,"\u6309\u7167\u4e0a\u9762\u8bf4\u7684\uff0c\u6211\u4eec\u4f9d\u9760 ",(0,r.kt)("inlineCode",{parentName:"p"},"web3.js")," \u63d0\u4f9b\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"buffer-layout")," \u6211\u4eec\u6765\u5b9a\u4e49\u8fd9\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," \u7684\u6307\u4ee4\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface TransferInstructionData {\n    instruction: TokenInstruction.Transfer;\n    amount: bigint;\n}\n\n/** TODO: docs */\nexport const transferInstructionData = struct<TransferInstructionData>([u8('instruction'), u64('amount')]);\n")),(0,r.kt)("p",null,'\u8fd9\u91cc\u6bd4 Rust \u7684\u5b9a\u4e49\uff0c\u591a\u4e86\u4e2a"',(0,r.kt)("inlineCode",{parentName:"p"},"instruction"),'"\uff0c\u8fd9\u4e2a\u662f\u56e0\u4e3a ',(0,r.kt)("inlineCode",{parentName:"p"},"Token")," \u7684\u5e8f\u5217\u5316\u89c4\u5219\uff0c\u4f7f\u7528\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"u8")," \u6765\u8868\u793a\u662f\u90a3\u4e2a\u6307\u4ee4\u3002"),(0,r.kt)("p",null,"\u5b9a\u4e49\u597d\u6307\u4ee4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u59cb\u6784\u5efa\u4e86\u3002"),(0,r.kt)("p",null,"\u6309\u7167\u4e0a\u9762\u8bf4\u5148\u6784\u5efa\u6307\u4ee4:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"function createTransferInstruction(\n    source,\n    destination,\n    owner,\n    amount,\n    programId\n) {\n    const keys = [\n            { pubkey: source, isSigner: false, isWritable: true },\n            { pubkey: destination, isSigner: false, isWritable: true },\n            { pubkey: owner, isSigner:true, isWritable: false}\n    ];\n\n    const data = Buffer.alloc(9);\n    data.writeUInt8(3);\n    const bigAmount = BigInt(amount);\n    data.writeBigInt64LE(bigAmount,1)\n\n\n    return new TransactionInstruction({ keys, programId, data });\n}\n")),(0,r.kt)("p",null,"\u8fd9\u91cc\u7684\u7b2c\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"byte")," \u4e3a 3 \u8868\u793a ",(0,r.kt)("inlineCode",{parentName:"p"},"transfer")," \u6307\u4ee4\u3002"),(0,r.kt)("p",null,"\u7136\u540e\u6784\u5efa\u4ea4\u6613\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"const txInstructions = [\n  createTransferInstruction(\n    ATA_PUBKEY_KEY,\n    TO_PUBLIC_KEY,\n    publicKey,\n    toCount,\n    TOKEN_PROGRAM_ID\n  ),\n];\n\nconst {\n  context: { slot: minContextSlot },\n  value: { blockhash, lastValidBlockHeight },\n} = await connection.getLatestBlockhashAndContext();\nconst messageV0 = new TransactionMessage({\n  payerKey: publicKey,\n  recentBlockhash: blockhash,\n  instructions: txInstructions,\n}).compileToV0Message();\n\nconst trx = new VersionedTransaction(messageV0);\n")),(0,r.kt)("p",null,"\u6700\u540e\u5229\u7528\u524d\u9762\u5b66\u7684\u901a\u8fc7\u94b1\u5305\u6765\u53d1\u9001\u4ea4\u6613\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'const signature = await sendTransaction(trx, connection, {\n  minContextSlot,\n});\nconsole.log("signature:", signature);\n')),(0,r.kt)("p",null,"\u8fd9\u6837\u6211\u4eec\u5c31\u5b8c\u6210\u4e86\u901a\u8fc7\u524d\u7aef\u6765\u548c\u7279\u5b9a\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Program"),"\u8fdb\u884c\u4ea4\u4e92\u3002"),(0,r.kt)("h2",{id:"demo"},"Demo"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.solanazh.com/assets/files/spl-token-demo.zip"},"spl token demo")))}d.isMDXComponent=!0},5215:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/data_bin-14da633dc893a27990f02364d28b0c7c.png"}}]);